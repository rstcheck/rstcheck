---
minimum_pre_commit_version: "2.17"
default_stages: [pre-commit]
default_language_version:
  python: python3.12

ci:
  skip: [mypy, pylint]

repos:
  # ----------------------------------------------
  # Meta hooks
  # ----------------------------------------------

  - repo: meta
    hooks:
      - id: identity
        stages: [pre-commit, manual]
      - id: check-hooks-apply
        stages: [manual]
      - id: check-useless-excludes
        stages: [manual]

  # ----------------------------------------------
  # File hooks
  # ----------------------------------------------

  # file checking out-of-the-box hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: cef0300fd0fc4d2a87a85fa2093c6b283ea36f4b # frozen: v5.0.0
    hooks:
      - id: check-case-conflict
      - id: check-shebang-scripts-are-executable
        exclude: '^.*\.rs$'
        stages: [pre-commit]
      - id: check-symlinks
      - id: destroyed-symlinks
      - id: forbid-new-submodules

  # ####################################################################################
  #
  #       FORMATTING
  #
  # ####################################################################################

  # ----------------------------------------------
  # Python
  # ----------------------------------------------

  # ruff - python linter with fixing ability
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: 9aeda5d1f4bbd212c557da1ea78eca9e8c829e19 # frozen: v0.11.13
    hooks:
      - id: ruff
        name: ruff (fix)
        args: ["--fix-only", "--exit-non-zero-on-fix", "--config=pyproject.toml"]
      - id: ruff-format
        name: ruff (format)

  # blacken-docs - black for python code in docs (rst/md/tex)
  - repo: https://github.com/asottile/blacken-docs
    rev: 78a9dcbecf4f755f65d1f3dec556bc249d723600 # frozen: 1.19.1
    hooks:
      - id: blacken-docs
        args: ["--line-length=100", "--target-version=py312"]
        exclude: testing|tests

  # ----------------------------------------------
  # JS / TS / HTML / CSS / MD / JSON / YAML
  # ----------------------------------------------

  # prettier - multi formatter
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: f12edd9c7be1c20cfa42420fd0e6df71e42b51ea # frozen: v4.0.0-alpha.8
    hooks:
      - id: prettier
        additional_dependencies:
          - "prettier@^3.2.4"

  # ----------------------------------------------
  # Spelling dict
  # ----------------------------------------------

  # Custom hook as python command
  - repo: local
    hooks:
      - id: sort-spelling-dicts
        name: Sort spelling_dict.txt files
        description: Sort spelling_dict.txt files
        language: python
        entry: python
        args:
          - "-c"
          - |
            import pathlib;
            import sys;
            p = pathlib.Path(sys.argv[1]);
            p.write_text("\n".join(sorted(set(p.read_text("utf-8").splitlines()))) + "\n", "utf-8")
        files: "spelling_dict.txt"

  # ----------------------------------------------
  # General (code unspecific)
  # ----------------------------------------------

  # code unspecific out-of-the-box hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: cef0300fd0fc4d2a87a85fa2093c6b283ea36f4b # frozen: v5.0.0
    hooks:
      - id: end-of-file-fixer
        stages: [pre-commit]
      - id: trailing-whitespace
        stages: [pre-commit]

  # ####################################################################################
  #
  #       LINTING
  #
  # ####################################################################################

  # ----------------------------------------------
  # General (code unspecific)
  # ----------------------------------------------

  - repo: local
    hooks:
      # Find TODO:|FIXME: comments in all files
      # Inline skip: `#i#` directly after the colon after the tag-word
      - id: find-todos
        name: "Find TODO:|FIXME: comments"
        description: "Check for TODO:|FIXME: comments in all files"
        language: pygrep
        entry: '(^|//!?|#|<!--|;|/\*(\*|!)?|\.\.)\s*(TODO:|FIXME:)(?!\s#i#)'
        exclude: TODO

  # code unspecific out-of-the-box hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: cef0300fd0fc4d2a87a85fa2093c6b283ea36f4b # frozen: v5.0.0
    hooks:
      - id: check-merge-conflict
      - id: detect-private-key

  # ----------------------------------------------
  # Python
  # ----------------------------------------------

  # ruff - python linter with fixing ability
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: 9aeda5d1f4bbd212c557da1ea78eca9e8c829e19 # frozen: v0.11.13
    hooks:
      - id: ruff
        name: ruff (lint)
        args: ["--config=pyproject.toml"]
      - id: ruff-format
        name: ruff (format-check)
        args: ["--diff"]

  # python specific out-of-the-box hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: cef0300fd0fc4d2a87a85fa2093c6b283ea36f4b # frozen: v5.0.0
    hooks:
      - id: debug-statements
      - id: fix-encoding-pragma
        args: ["--remove"]
      - id: name-tests-test

  # Lint hooks managed via tox envs b/c they need the pkg installed
  - repo: local
    hooks:
      # mypy - python type checker
      - id: mypy
        name: mypy
        description: run mypy over the installed package via tox
        entry: tox
        args: ["-e", "mypy"]
        language: python
        additional_dependencies: [tox]
        types: [python]
        pass_filenames: false
        require_serial: true

  # pylint - python linter
  - repo: https://github.com/PyCQA/pylint/
    rev: f798a4a3508bcbb8ad0773ae14bf32d28dcfdcbe # frozen: v3.3.7
    hooks:
      - id: pylint
        name: spell-check (pylint+pyenchant)
        description: >
          spell-check in docstrings/comments in py-source via pyenchant and pylint
        additional_dependencies: [pyenchant]
        args: ["--disable=all", "--enable=spelling", "--rcfile=.pylintrc.spelling.toml"]

  # ----------------------------------------------
  # Shell script
  # ----------------------------------------------

  # shellscript (via PyPI package)
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: a23f6b85d0fdd5bb9d564e2579e678033debbdff # frozen: v0.10.0.1
    hooks:
      - id: shellcheck

  # ----------------------------------------------
  # reStructuredText
  # ----------------------------------------------

  # rstcheck - rst file checker
  - repo: https://github.com/rstcheck/rstcheck
    rev: 27258fde1ee7d3b1e6a7bbc58f4c7b1dd0e719e5 # frozen: v6.2.5
    hooks:
      - id: rstcheck
        additional_dependencies: [sphinx]
        exclude: testing
        args: ["--config", ".rstcheck.project.cfg"]

  # ----------------------------------------------
  # Markdown
  # ----------------------------------------------

  # markdownlint - md file checker
  - repo: https://github.com/DavidAnson/markdownlint-cli2
    rev: d7a4f7cf4914d3bffb9b83bdbc45fd2a00c91ff9 # frozen: v0.18.1
    hooks:
      - id: markdownlint-cli2

  # ----------------------------------------------
  # TOML / YAML
  # ----------------------------------------------

  # JSON specific out-of-the-box hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: cef0300fd0fc4d2a87a85fa2093c6b283ea36f4b # frozen: v5.0.0
    hooks:
      - id: check-toml
      - id: check-yaml

  # yamllint - yaml linter
  - repo: https://github.com/adrienverge/yamllint
    rev: 79a6b2b1392eaf49cdd32ac4f14be1a809bbd8f7 # frozen: v1.37.1
    hooks:
      - id: yamllint

  # ----------------------------------------------
  # Validate .pre-commit-hooks.yaml file
  # ----------------------------------------------

  - repo: https://github.com/pre-commit/pre-commit
    rev: aa48766b888990e7b118d12cf757109d96e65a7e # frozen: v4.2.0
    hooks:
      - id: validate_manifest
